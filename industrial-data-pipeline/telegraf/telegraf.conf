[[inputs.kafka_consumer]]
  brokers = ["kafka:9092"]
  topics = ["iot-data"]
  data_format = "json"
  json_time_key="Timestamp"
  json_time_format="2006-01-02T15:04:05.000Z"
  tag_keys=["Machine_ID"]
  name_override = "iot_metrics"

[[inputs.kafka_consumer]]
  brokers = ["kafka:9092"]
  topics = ["scada-data"]
  data_format = "json"
  json_time_key = "Timestamp"  # Use the timestamp from your JSON
  json_time_format = "2006-01-02T15:04:05.000Z"  # Go format for your timestamp
  tag_keys = ["Machine_ID", "Machine_Status", "Alarm_Code"]  # These will become tags
  json_string_fields = ["Machine_Status", "Alarm_Code"]  # Ensure these remain strings
  name_override = "scada_metrics"
# Output for iot-data - only accepts metrics from iot_metrics


[[inputs.kafka_consumer]]
  brokers = ["kafka:9092"]
  topics = ["mes-data"]
  data_format = "json"
  json_time_key = "Timestamp"  # Use the timestamp from your JSON
  json_time_format = "2006-01-02T15:04:05.000Z"  # Go format for your timestamp
  tag_keys = ["Machine_ID", "Machine_Status", "Alarm_Code"]  # These will become tags
  json_string_fields = ["Machine_Status", "Alarm_Code"]  # Ensure these remain strings
  name_override = "scada_metrics"
# Output for iot-data - only accepts metrics from iot_metrics



[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "iot_token"
  organization = "iot_organization"
  bucket = "iot-data"
  timeout = "5s"
  namepass = ["iot_metrics"]  # Only send metrics from this input

# Output for scada-data - only accepts metrics from scada_metrics
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "iot_token"
  organization = "iot_organization"
  bucket = "scada-data"
  timeout = "5s"
  namepass = ["scada_metrics"]  # Only send metrics from this input